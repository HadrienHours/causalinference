#!/bin/sh

NARGS=5

if [ ! $# -eq $NARGS ]
then
	echo "Usage script:<xplotfile><date><outputfile><tablename><cid>"
	exit 1
fi

if [[ $2 =~ ^[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]$ ]]
then
        echo "Accepted date $2"
else
        echo "Wrong date format YYYY-MM-DD"
        exit 1
fi

if [ -f listlinesloss_perf ]
then
	rm listlinesloss_perf
fi

if [ -f listlinetsloss_perf ]
then
	rm listlinetsloss_perf
fi

if [ -f listlinetsloss_perf_2 ]
then
        rm listlinetsloss_perf_2
fi


if [ -f $3 ]
then
	echo "$3 file already exists, overwrite ? Y/N"
	read input
	if [ "$input"=="Y" ]
	then
		rm $3
	else
		exit 1
	fi
fi


xplot="$1"_formatted

cat $1 | nl | sed -re 's/^[ \t]+//g' | sed -re 's/[ \t]+/ /g' > $xplot

out=outputlossfunction_perf

echo "Tablename,Cid,Time,Interpacket" > $out

cat $1 | grep -n "red" | egrep -o "[0-9]+" > listlinesloss_perf
echo "File with 'red' lines created"
for l in $(cat listlinesloss_perf)
do
	echo $(( $l+1 )) >> listlinetsloss_perf
	m=$(cat $1 | head -$(( $l-2 )) | egrep -n "^[ ]*white" | tail -1 | egrep -o "[0-9]+")
	#test if the previous packet sent was a loss
	val=$(head -$(( $m+1 )) $1 | tail -1 | tr -d \ )
	#echo "Value found $val corresponding to loss at line $l which prev pkt was found line $m"
	if [ "$val" == "red" ]
	then
		echo $(( $m+2 )) >> listlinetsloss_perf_2
	else
		echo $(( $m+1 )) >> listlinetsloss_perf_2
	fi
done
echo "Update on line number done"

#l1=$(cat $1 | grep -n "red" | head -1 | egrep -o "[0-9]+")
#l1=$(( $l1+1 ))
l1=$(head -1 listlinetsloss_perf)
d1=$(cat $1 | head -$l1 | tail -1 | awk '{print $2}')
s1=$(date +%Y-%m-%d -d @"$d1")
#by adding +%x we are sure the offset is an integer
e0=$(date +%s -d "$2")
e1=$(date +%s -d "$s1")

offset=$(( $e0-$e1 ))
offset=$(( $offset-3600 ))

outx=linetsloss
outx2=linetsloss2
echo "Start merging two files"
./join_script_perl $xplot listlinetsloss_perf $outx
./join_script_perl $xplot listlinetsloss_perf_2 $outx2
echo "Finish merging files"

nl=$(wc -l listlinetsloss_perf | cut -d \  -f1)

echo "Number of line to treat for cnxid $5 table $4 is $nl"

counter=1

for (( i=1;i<=$nl;i++ ))
do
	if [ $(( $counter%10 )) -eq 0 ]
	then
		echo "$counter / $nl"
	fi
	#echo "j=\$(cat $outx | head -$i | tail -1 | awk '{print \$3}')"
	j=$(cat $outx | head -$i | tail -1 | awk '{print $3}')
	#echo "Loss detected at $j epoch time"
	l=$(cat $outx2 | head -$i | tail -1 | awk '{print $3}')
	#echo "Previous packet observed at $l"
	r=$(echo $j $l | awk '{print $1-$2}')
	#echo "Interpacket is then $r"
	j0=$j
	#separate the decimal part  
	j1=$(echo $j0 | cut -d . -f1)
	j2=$(echo $j0 | cut -d . -f2)
	j3=$(( $j1+$offset ))
	j=$(echo "$j3"."$j2")
	#echo "$j0 + $offset = $j"
	k=$(date +"%Y-%m-%d %H:%M:%S.%N" -d @$j)
	#echo "Date corresponding to $j is $k"
	echo "$k,$r">>$out
	counter=$(( $counter+1 ))
	#read input
done



#echo "Finished creating file"
cat $out | sed -e '2,$s/^/'$4','$5',/g' > $3
#echo "Finished reformatting output to fit csv model"
rm -f listlinesloss_perf listlinetsloss_perf listlinetsloss_perf_2 $outx $outx2 $out $xplot
